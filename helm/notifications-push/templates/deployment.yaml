apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      containers: 
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: QUEUE_PROXY_ADDRS
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.proxy.url.with.protocol
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: api.host
        - name: GROUP_ID
          value: {{ .Values.env.GROUP_ID }} 
        - name: TOPIC
          value: {{ .Values.env.TOPIC }} 
        - name: NOTIFICATIONS_DELAY
          value: "{{ .Values.env.NOTIFICATIONS_DELAY }}"
        - name: CONSUMER_BACKOFF
          value: "{{ .Values.env.CONSUMER_BACKOFF }}"
        - name: NOTIFICATIONS_RESOURCE
          value: {{ .Values.env.NOTIFICATIONS_RESOURCE }} 
        - name: WHITELIST
          value: {{ .Values.env.WHITELIST }} 
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 5
        readinessProbe: 
          httpGet: 
            path: "/__gtg" 
            port: 8080 
          initialDelaySeconds: 20
          periodSeconds: 30 
        resources: 
{{ toYaml .Values.resources | indent 12 }}

